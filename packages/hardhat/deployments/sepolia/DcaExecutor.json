{
  "address": "0x64EA27E2985F03B0Cac385EeDC678bfEdECDC6D5",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "Cancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "Completed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token1Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token2Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ISwapRouter02",
          "name": "router",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "swapExecutionPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "swapStartTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numberOfSwaps",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token1Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token2Address",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "token2Amount",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "activeRequestsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "cancelDcaRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "completedRequestsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dcaRequests",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "token1InitialAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token1CurrentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token2CurrentAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract ISwapRouter02",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "swapExecutionPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfSwapsToExecute",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfSwapsExecuted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastExecutionTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dcaRequestsCompleted",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "token1InitialAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token1CurrentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token2CurrentAmount",
          "type": "uint256"
        },
        {
          "internalType": "contract ISwapRouter02",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "swapExecutionPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfSwapsToExecute",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "numberOfSwapsExecuted",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastExecutionTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "executeSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "receivers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "token1Amount",
          "type": "uint256"
        },
        {
          "internalType": "contract ISwapRouter02",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "numberOfSwaps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "swapExecutionPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTimestamp",
          "type": "uint256"
        }
      ],
      "name": "submitDcaRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3d23ed2a00ab235d1fa26e4f9d5e4937f38b3271f662351b744f4d7d22b2183f",
  "receipt": {
    "to": null,
    "from": "0xE2eE625D83C68123aCa4251d6a82f23b70d9eEE3",
    "contractAddress": "0x64EA27E2985F03B0Cac385EeDC678bfEdECDC6D5",
    "transactionIndex": 29,
    "gasUsed": "1149526",
    "logsBloom": "0x
    "blockHash": "0x3cd75015ac4a912cc331b46920b2870d0781e0480c6c2f1accb4d9bff10f4ebd",
    "transactionHash": "0x3d23ed2a00ab235d1fa26e4f9d5e4937f38b3271f662351b744f4d7d22b2183f",
    "logs": [],
    "blockNumber": 5499968,
    "cumulativeGasUsed": "17646281",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "10869de340d0d6927074a38051027b39",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Cancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"Completed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token2Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ISwapRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapExecutionPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapStartTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberOfSwaps\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token2Address\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"token2Amount\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activeRequestsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"cancelDcaRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"completedRequestsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dcaRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1InitialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1CurrentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token2CurrentAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract ISwapRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapExecutionPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfSwapsToExecute\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfSwapsExecuted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastExecutionTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dcaRequestsCompleted\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1InitialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1CurrentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token2CurrentAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract ISwapRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapExecutionPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfSwapsToExecute\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfSwapsExecuted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastExecutionTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"executeSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"receivers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"},{\"internalType\":\"contract ISwapRouter02\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"numberOfSwaps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapExecutionPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"name\":\"submitDcaRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DcaExecutor.sol\":\"DcaExecutor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@uniswap/swap-router-contracts/contracts/interfaces/IApproveAndCall.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.6;\\npragma abicoder v2;\\n\\ninterface IApproveAndCall {\\n    enum ApprovalType {NOT_REQUIRED, MAX, MAX_MINUS_ONE, ZERO_THEN_MAX, ZERO_THEN_MAX_MINUS_ONE}\\n\\n    /// @dev Lens to be called off-chain to determine which (if any) of the relevant approval functions should be called\\n    /// @param token The token to approve\\n    /// @param amount The amount to approve\\n    /// @return The required approval type\\n    function getApprovalType(address token, uint256 amount) external returns (ApprovalType);\\n\\n    /// @notice Approves a token for the maximum possible amount\\n    /// @param token The token to approve\\n    function approveMax(address token) external payable;\\n\\n    /// @notice Approves a token for the maximum possible amount minus one\\n    /// @param token The token to approve\\n    function approveMaxMinusOne(address token) external payable;\\n\\n    /// @notice Approves a token for zero, then the maximum possible amount\\n    /// @param token The token to approve\\n    function approveZeroThenMax(address token) external payable;\\n\\n    /// @notice Approves a token for zero, then the maximum possible amount minus one\\n    /// @param token The token to approve\\n    function approveZeroThenMaxMinusOne(address token) external payable;\\n\\n    /// @notice Calls the position manager with arbitrary calldata\\n    /// @param data Calldata to pass along to the position manager\\n    /// @return result The result from the call\\n    function callPositionManager(bytes memory data) external payable returns (bytes memory result);\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n    }\\n\\n    /// @notice Calls the position manager's mint function\\n    /// @param params Calldata to pass along to the position manager\\n    /// @return result The result from the call\\n    function mint(MintParams calldata params) external payable returns (bytes memory result);\\n\\n    struct IncreaseLiquidityParams {\\n        address token0;\\n        address token1;\\n        uint256 tokenId;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n    }\\n\\n    /// @notice Calls the position manager's increaseLiquidity function\\n    /// @param params Calldata to pass along to the position manager\\n    /// @return result The result from the call\\n    function increaseLiquidity(IncreaseLiquidityParams calldata params) external payable returns (bytes memory result);\\n}\\n\",\"keccak256\":\"0x7d3ff6615d89295b21a6d86dbb94154136d84c62abe7194ad6dc42fa4f437547\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/swap-router-contracts/contracts/interfaces/IMulticallExtended.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol';\\n\\n/// @title MulticallExtended interface\\n/// @notice Enables calling multiple methods in a single call to the contract with optional validation\\ninterface IMulticallExtended is IMulticall {\\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\\n    /// @param deadline The time by which this function must be called before failing\\n    /// @param data The encoded function data for each of the calls to make to this contract\\n    /// @return results The results from each of the calls passed in via data\\n    function multicall(uint256 deadline, bytes[] calldata data) external payable returns (bytes[] memory results);\\n\\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\\n    /// @param previousBlockhash The expected parent blockHash\\n    /// @param data The encoded function data for each of the calls to make to this contract\\n    /// @return results The results from each of the calls passed in via data\\n    function multicall(bytes32 previousBlockhash, bytes[] calldata data)\\n        external\\n        payable\\n        returns (bytes[] memory results);\\n}\\n\",\"keccak256\":\"0xf92e9474990ec0025f6e4b8faf040a5c6280549c16bb42b6c00be9975757d997\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/swap-router-contracts/contracts/interfaces/ISwapRouter02.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-periphery/contracts/interfaces/ISelfPermit.sol';\\n\\nimport './IV2SwapRouter.sol';\\nimport './IV3SwapRouter.sol';\\nimport './IApproveAndCall.sol';\\nimport './IMulticallExtended.sol';\\n\\n/// @title Router token swapping functionality\\ninterface ISwapRouter02 is IV2SwapRouter, IV3SwapRouter, IApproveAndCall, IMulticallExtended, ISelfPermit {\\n\\n}\\n\",\"keccak256\":\"0xf846912bb8c8f4be872ae152550227caba219d3b4d6e85b809fb3cbad984d43b\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/swap-router-contracts/contracts/interfaces/IV2SwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V2\\ninterface IV2SwapRouter {\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\\n    /// @param amountIn The amount of token to swap\\n    /// @param amountOutMin The minimum amount of output that must be received\\n    /// @param path The ordered list of tokens to swap through\\n    /// @param to The recipient address\\n    /// @return amountOut The amount of the received token\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to\\n    ) external payable returns (uint256 amountOut);\\n\\n    /// @notice Swaps as little as possible of one token for an exact amount of another token\\n    /// @param amountOut The amount of token to swap for\\n    /// @param amountInMax The maximum amount of input that the caller will pay\\n    /// @param path The ordered list of tokens to swap through\\n    /// @param to The recipient address\\n    /// @return amountIn The amount of token to pay\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to\\n    ) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0xfc31c1d8d559aef138a826066ca471573d7efe497775fcbf3546f27f4e84f2eb\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface IV3SwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// that may remain in the router after the swap.\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// that may remain in the router after the swap.\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Multicall interface\\n/// @notice Enables calling multiple methods in a single call to the contract\\ninterface IMulticall {\\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\\n    /// @param data The encoded function data for each of the calls to make to this contract\\n    /// @return results The results from each of the calls passed in via data\\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\\n}\\n\",\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISelfPermit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Self Permit\\n/// @notice Functionality to call permit on any EIP-2612-compliant token for use in the route\\ninterface ISelfPermit {\\n    /// @notice Permits this contract to spend a given token from `msg.sender`\\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\\n    /// @param token The address of the token spent\\n    /// @param value The amount that can be spent of token\\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function selfPermit(\\n        address token,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n\\n    /// @notice Permits this contract to spend a given token from `msg.sender`\\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\\n    /// Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\\n    /// @param token The address of the token spent\\n    /// @param value The amount that can be spent of token\\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function selfPermitIfNecessary(\\n        address token,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n\\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\\n    /// @param token The address of the token spent\\n    /// @param nonce The current nonce of the owner\\n    /// @param expiry The timestamp at which the permit is no longer valid\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function selfPermitAllowed(\\n        address token,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n\\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\\n    /// Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\\n    /// @param token The address of the token spent\\n    /// @param nonce The current nonce of the owner\\n    /// @param expiry The timestamp at which the permit is no longer valid\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function selfPermitAllowedIfNecessary(\\n        address token,\\n        uint256 nonce,\\n        uint256 expiry,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\"},\"contracts/DcaExecutor.sol\":{\"content\":\"pragma solidity >=0.7.5;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {ISwapRouter02} from \\\"@uniswap/swap-router-contracts/contracts/interfaces/ISwapRouter02.sol\\\";\\nimport {IV3SwapRouter} from \\\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\\\";\\n\\n\\ncontract DcaExecutor {\\n    struct DcaRequest {\\n        address receiver;\\n        IERC20 token1;\\n        IERC20 token2;\\n        uint256 token1InitialAmount;\\n        uint256 token1CurrentAmount;\\n        uint256 token2CurrentAmount;\\n        ISwapRouter02 router;\\n        uint256 swapExecutionPeriod;\\n        uint256 startTimestamp;\\n        uint256 numberOfSwapsToExecute;\\n        uint256 numberOfSwapsExecuted;\\n        uint256 lastExecutionTimestamp;\\n    }\\n\\n    address[] public receivers;\\n    mapping(address => uint256) public activeRequestsLength;\\n    mapping(address => DcaRequest[]) public dcaRequests;\\n    mapping(address => uint256) public completedRequestsLength;\\n    mapping(address => DcaRequest[]) public dcaRequestsCompleted;\\n\\n    event Deposited(address indexed receiver, address token1Address, uint256 token1Amount, address token2Address, ISwapRouter02 router, uint256 swapExecutionPeriod, uint256 swapStartTime, uint256 numberOfSwaps);\\n    event Swapped(address indexed receiver, address token1Address, uint256 token1Amount, address token2Address, uint256 token2Amount);\\n    event Cancelled(address indexed receiver, uint256 index);\\n    event Completed(address indexed receiver, uint256 index);\\n\\n    // approve the contract to spend the token\\n    function submitDcaRequest(\\n        IERC20 token1,\\n        IERC20 token2,\\n        uint256 token1Amount,\\n        ISwapRouter02 router,\\n        uint256 numberOfSwaps,\\n        uint256 swapExecutionPeriod,\\n        uint256 startTimestamp\\n    ) external {\\n        require(token1.transferFrom(msg.sender, address(this), token1Amount), \\\"funding transfer failed\\\");\\n        receivers.push(msg.sender);\\n        dcaRequests[msg.sender].push(\\n            DcaRequest(\\n                {\\n                    receiver: msg.sender,\\n                    token1: token1,\\n                    token2: token2,\\n                    token1InitialAmount: token1Amount,\\n                    token1CurrentAmount: token1Amount,\\n                    token2CurrentAmount: 0,\\n                    router: router,\\n                    swapExecutionPeriod: swapExecutionPeriod,\\n                    startTimestamp: startTimestamp,\\n                    numberOfSwapsToExecute: numberOfSwaps,\\n                    numberOfSwapsExecuted: 0,\\n                    lastExecutionTimestamp: 0\\n                }\\n            )\\n        );\\n        activeRequestsLength[msg.sender] = dcaRequests[msg.sender].length;\\n        token1.approve(address(router), token1Amount);\\n        emit Deposited(msg.sender, address(token1), token1Amount, address(token2), router, swapExecutionPeriod, startTimestamp, numberOfSwaps);\\n    }\\n\\n    function executeSwap(address receiver, uint256 index) external {\\n        DcaRequest memory request = dcaRequests[receiver][index];\\n        require(block.timestamp >= request.startTimestamp, \\\"start date not reached\\\");\\n        require(request.numberOfSwapsToExecute > 0, \\\"no more swaps\\\");\\n        require(block.timestamp >= request.lastExecutionTimestamp + request.swapExecutionPeriod, \\\"swap execution period not reached\\\");\\n\\n        uint256 amountIn = request.token1CurrentAmount / request.numberOfSwapsToExecute;\\n        IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter\\n            .ExactInputSingleParams({\\n                tokenIn: address(request.token1),\\n                tokenOut: address(request.token2),\\n                fee: 3000,\\n                recipient: address(this),\\n                amountIn: amountIn,\\n                amountOutMinimum: 0,\\n                sqrtPriceLimitX96: 0\\n            });\\n\\n        uint256 amountOut = request.router.exactInputSingle(params);\\n        request.numberOfSwapsToExecute--;\\n        request.numberOfSwapsExecuted++;\\n        request.token1CurrentAmount -= amountIn;\\n        request.token2CurrentAmount += amountOut;\\n        request.lastExecutionTimestamp = block.timestamp;\\n        dcaRequests[receiver][index] = request;\\n        emit Swapped(receiver, address(request.token1), amountIn, address(request.token2), amountOut);\\n\\n        if (request.numberOfSwapsToExecute == 0) {\\n            _completeRequest(receiver, index);\\n            emit Completed(receiver, dcaRequestsCompleted[receiver].length - 1);\\n        }\\n    }\\n\\n    function cancelDcaRequest(address receiver, uint256 index) external {\\n        require(receiver == msg.sender, \\\"not authorized\\\");\\n        _completeRequest(receiver, index);\\n        emit Cancelled(receiver, dcaRequestsCompleted[receiver].length - 1);\\n    }\\n\\n    function _completeRequest(address receiver, uint256 index) private {\\n        DcaRequest memory request = dcaRequests[receiver][index];\\n        require(request.token1.transfer(receiver, request.token1CurrentAmount), \\\"transfer failed\\\");\\n        require(request.token2.transfer(receiver, request.token2CurrentAmount), \\\"transfer failed\\\");\\n        dcaRequestsCompleted[receiver].push(request);\\n        dcaRequests[receiver][index] = dcaRequests[receiver][dcaRequests[receiver].length - 1];\\n        dcaRequests[receiver].pop();\\n        activeRequestsLength[receiver] = dcaRequests[receiver].length;\\n        completedRequestsLength[receiver] = dcaRequestsCompleted[receiver].length;\\n    }\\n}\\n\",\"keccak256\":\"0x91c0d3dca5b73f86a556036b1302ea5dc799e50796007b6ceecff8c72cbf7501\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 491,
        "contract": "contracts/DcaExecutor.sol:DcaExecutor",
        "label": "receivers",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 495,
        "contract": "contracts/DcaExecutor.sol:DcaExecutor",
        "label": "activeRequestsLength",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 501,
        "contract": "contracts/DcaExecutor.sol:DcaExecutor",
        "label": "dcaRequests",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(DcaRequest)488_storage)dyn_storage)"
      },
      {
        "astId": 505,
        "contract": "contracts/DcaExecutor.sol:DcaExecutor",
        "label": "completedRequestsLength",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 511,
        "contract": "contracts/DcaExecutor.sol:DcaExecutor",
        "label": "dcaRequestsCompleted",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_array(t_struct(DcaRequest)488_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(DcaRequest)488_storage)dyn_storage": {
        "base": "t_struct(DcaRequest)488_storage",
        "encoding": "dynamic_array",
        "label": "struct DcaExecutor.DcaRequest[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ISwapRouter02)228": {
        "encoding": "inplace",
        "label": "contract ISwapRouter02",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(DcaRequest)488_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DcaExecutor.DcaRequest[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(DcaRequest)488_storage)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(DcaRequest)488_storage": {
        "encoding": "inplace",
        "label": "struct DcaExecutor.DcaRequest",
        "members": [
          {
            "astId": 462,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "receiver",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 465,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "token1",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)77"
          },
          {
            "astId": 468,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "token2",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)77"
          },
          {
            "astId": 470,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "token1InitialAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 472,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "token1CurrentAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 474,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "token2CurrentAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 477,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "router",
            "offset": 0,
            "slot": "6",
            "type": "t_contract(ISwapRouter02)228"
          },
          {
            "astId": 479,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "swapExecutionPeriod",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 481,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "startTimestamp",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 483,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "numberOfSwapsToExecute",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 485,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "numberOfSwapsExecuted",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 487,
            "contract": "contracts/DcaExecutor.sol:DcaExecutor",
            "label": "lastExecutionTimestamp",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}